// src/components/core/JsonDownload.tsx
'use client';

import { useState, useEffect } from 'react';
import { Button } from '@/components/ui/button';
import { Card } from '@/components/ui/card';
import { CrimeReport } from '@/types/safety';

export function JsonDownload() {
  const [latestData, setLatestData] = useState<{
    data: CrimeReport[];
    filename: string;
    count: number;
  } | null>(null);
  const [isLoading, setIsLoading] = useState(false);

  const fetchLatestResults = async () => {
    setIsLoading(true);
    try {
      const response = await fetch('/api/results');
      if (response.ok) {
        const data = await response.json();
        setLatestData(data);
      }
    } catch (error) {
      console.error('Failed to fetch latest results:', error);
    } finally {
      setIsLoading(false);
    }
  };

  useEffect(() => {
    fetchLatestResults();
  }, []);

  const downloadJson = () => {
    if (!latestData) return;

    const blob = new Blob([JSON.stringify(latestData.data, null, 2)], {
      type: 'application/json'
    });
    
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = latestData.filename;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
  };

  const viewInBrowser = () => {
    if (!latestData) return;
    
    const jsonString = JSON.stringify(latestData.data, null, 2);
    const newWindow = window.open();
    if (newWindow) {
      newWindow.document.write(`
        <html>
          <head>
            <title>Crime Reports JSON - ${latestData.filename}</title>
            <style>
              body { font-family: monospace; margin: 20px; background: #f5f5f5; }
              pre { background: white; padding: 20px; border-radius: 8px; overflow: auto; }
            </style>
          </head>
          <body>
            <h2>Crime Reports JSON</h2>
            <p><strong>File:</strong> ${latestData.filename}</p>
            <p><strong>Records:</strong> ${latestData.count}</p>
            <pre>${jsonString}</pre>
          </body>
        </html>
      `);
    }
  };

  return (
    <Card className="p-6">
      <div className="space-y-4">
        <div className="space-y-2">
          <h3 className="text-lg font-semibold">JSON Results</h3>
          <p className="text-sm text-muted-foreground">
            Download or view the latest processed crime data
          </p>
        </div>

        {latestData ? (
          <div className="space-y-3">
            <div className="text-sm space-y-1 bg-muted/50 p-3 rounded">
              <p><strong>File:</strong> {latestData.filename}</p>
              <p><strong>Records:</strong> {latestData.count}</p>
              <p><strong>Status:</strong> ✅ Schema Valid</p>
            </div>
            
            <div className="flex flex-col gap-2">
              <Button onClick={downloadJson} className="w-full">
                Download JSON File
              </Button>
              <Button variant="outline" onClick={viewInBrowser} className="w-full">
                View in Browser
              </Button>
              <Button variant="ghost" onClick={fetchLatestResults} disabled={isLoading} className="w-full">
                {isLoading ? 'Refreshing...' : 'Refresh Results'}
              </Button>
            </div>
          </div>
        ) : (
          <div className="text-center py-4">
            <p className="text-muted-foreground mb-3">
              {isLoading ? 'Loading...' : 'No results available yet'}
            </p>
            <p className="text-xs text-muted-foreground mb-3">
              Search for crime news to generate JSON data
            </p>
            {!isLoading && (
              <Button variant="outline" onClick={fetchLatestResults} className="w-full">
                Check for Results
              </Button>
            )}
          </div>
        )}
        
        <div className="text-xs text-muted-foreground border-t pt-3">
          <p>Generated by SimpleGeoAgent using:</p>
          <ul className="mt-1 space-y-1">
            <li>• Nominatim geocoding (free)</li>
            <li>• Rule-based crime classification</li>
            <li>• Pattern matching location extraction</li>
          </ul>
        </div>
      </div>
    </Card>
  );
}