import { NextRequest, NextResponse } from 'next/server';
import { createServerClient } from '@/lib/supabase/server';

export async function GET(request: NextRequest) {
  try {
    const supabase = await createServerClient();
    
    // Get the user from the request (you might need to implement proper auth)
    // For now, we'll need to get the user ID from the request headers or query params
    const userId = request.headers.get('x-user-id') ?? request.nextUrl.searchParams.get('userId');
    
    if (!userId) {
      return NextResponse.json(
        { error: 'User ID is required' },
        { status: 400 }
      );
    }

    const { data: locations, error } = await supabase
      .from('saved_locations')
      .select(`
        id,
        user_id,
        name,
        address,
        latitude,
        longitude,
        is_primary,
        radius_km,
        created_at,
        updated_at
      `)
      .eq('user_id', userId)
      .order('is_primary', { ascending: false })
      .order('created_at', { ascending: false });

    if (error) {
      console.error('❌ Saved Locations API: Database error:', error);
      return NextResponse.json(
        { error: 'Failed to fetch saved locations' },
        { status: 500 }
      );
    }

    console.log('✅ Saved Locations API: Successfully fetched', locations?.length?? 0, 'locations for user', userId);
    return NextResponse.json(locations ?? []);
  } catch (error) {
    console.error('❌ Saved Locations API: Error occurred:', error);
    return NextResponse.json(
      { error: 'Failed to fetch saved locations', details: error instanceof Error ? error.message : 'Unknown error' },
      { status: 500 }
    );
  }
}
